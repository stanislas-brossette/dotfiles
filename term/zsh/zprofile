# -*- shell-script -*-
#

# Named directories
#p=/home/dynwalk/profiles/devel
#pb=$p/build; pi=$p/install; ps=$p/src

w=/home/stan/wdc_workspace
wb=$w/build/GCC; wi=$w/install/GCC; ws=$w/src

# Add prefix to PATH
#export PATH="$pi/bin:$PATH"
#export PATH="$pi/sbin:$PATH"
#export PATH="$wi/bin":$PATH
#export PATH="/home/dynwalk/.local/bin":$PATH
#export PATH="/opt/openrobots/bin":$PATH

# Add prefix to LD_LIBRARY_PATH
#export LD_LIBRARY_PATH="$pi/lib":$LD_LIBRARY_PATH
#export LD_LIBRARY_PATH="$wi/lib":$LD_LIBRARY_PATH

# PYTHONPATH
# export PYTHONPATH="$wi/lib/python2.7/dist-packages":$PYTHONPATH
# export PYTHONPATH="$wi/lib/python2.7/site-packages":$PYTHONPATH
# Eigen
#export EIGEN3_ROOT_DIR="$pi/include/eigen3"
#export EIGEN3_ROOT="$pi/include/eigen3"

# Gazebo
#export SIMULATION_WORKSPACE_PATH=$HOME/.simulation
#export GAZEBO_MODEL_PATH=$SIMULATION_WORKSPACE_PATH:$SIMULATION_WORKSPACE_PATH/wdc_v3_robot:$GAZEBO_MODEL_PATH
#export GAZEBO_PLUGIN_PATH=$HOME/profiles/wdc_workspace/build/wanderbrain/simulation/world:$HOME/profiles/wdc_workspace/build/wanderbrain/simulation:$GAZEBO_PLUGIN_PATH

# DirectCollocation
export MATLAB_DIRECT_COLLOCATION_PATH=$ws/directCollocation_Exo

# WDC robot path
#export WDC_MESH_ROOT_PATH="/home/dynwalk/.simulation"
export WDC_MESH_ROOT_PATH="$ws/wdc_v3_robot"
export WDC_ROBOT_PATH="$ws/wdc_v3_robot"
export WDC_V3_ROBOT_PATH="$ws/wdc_v3_robot"

# WDC workspace path
#export WDC_WORKSPACE_PATH="$ws"

# Add tmuxifier to PATH
#export PATH="$HOME/.tmuxifier/bin:$PATH"

# ColorGcc
#export CXX=colorgcc

#export CPATH="$pi/include:$CPATH"

# Update LD_LIBRARY_PATH to find locally installed libraries.
#export LD_LIBRARY_PATH="$pi/lib:$LD_LIBRARY_PATH"
#export LD_LIBRARY_PATH="$pi/lib/roboptim-core:$LD_LIBRARY_PATH"
#export LD_LIBRARY_PATH="$pi/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH"

# Look for locally installed man pages.
#export MANPATH="$MANPATH:$pi/share/man"

# Libtool (ltdl)
#export LTDL_LIBRARY_PATH="$pi/lib/x86_64-linux-gnu/roboptim-core:$LTDL_LIBRARY_PATH"
#export LTDL_LIBRARY_PATH="$pi/lib/roboptim-core:$LTDL_LIBRARY_PATH"

# pkg-config
#export PKG_CONFIG_PATH="$pi/lib/pkgconfig:$PKG_CONFIG_PATH"
#export PKG_CONFIG_PATH="$pi/share/pkgconfig:$PKG_CONFIG_PATH"
#export PKG_CONFIG_PATH="$wi/lib/pkgconfig":$PKG_CONFIG_PATH


#export PKG_CONFIG_PATH="$pi/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"


# Python
#export PYTHON_SITE_PACKAGES=$pi/lib/python2.7/site-packages
#export PYTHON_DIST_PACKAGES=$pi/lib/python2.7/dist-packages
#export PYTHONPATH=$pi/lib/python2.7/dist-packages:$PYTHONPATH
#export PYTHONPATH=$pi/lib/python2.7/site-packages:$PYTHONPATH

# Cython
#export MC_CYTHON_PATH=$ps/multi_contact/mc_cython

# make AddressSanitizer symbolize its output
#export ASAN_SYMBOLIZER_PATH=/usr/bin/llvm-symbolizer-3.4

# Ros
#source /opt/ros/indigo/setup.zsh
#source $ws/wandersimu/ros_packages/devel/setup.zsh
#export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:"$ws/wdc_v3_robot"
#export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:"$ws/wandersimu/ros_packages/src"

#source $ps/multi_contact/ros_workspace/devel/setup.zsh
#source $ps/ros/hydro/setup.zsh

# Anti-aliazing RViz
#export VGL_SAMPLES=4

# fzf
#export FZF_DEFAULT_OPTS='--extended-exact'

#if [ "$DESKTOP_SESSION" = "i3" ]; then
#  export $(gnome-keyring-daemon -s)
#fi

#alias vrep=/home/dynwalk/profiles/default-x86_64-linux-ubuntu-13.04/src/VREP/V-REP_PRO_EDU_V3_3_1_64_Linux/vrep.sh 
#alias VREP=/home/dynwalk/profiles/default-x86_64-linux-ubuntu-13.04/src/VREP/
#export VREP_PATH="/home/dynwalk/profiles/default-x86_64-linux-ubuntu-13.04/src/VREP/V-REP_PRO_EDU_V3_3_1_64_Linux/"

